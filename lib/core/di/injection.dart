import 'package:ccl_app/core/di/injection.config.dart'; // Auto-generated by Injectable
import 'package:ccl_app/core/routes/routes.dart'; // Custom app router definition
import 'package:get_it/get_it.dart'; // Service locator
import 'package:injectable/injectable.dart'; // Injectable annotations

/// Global [GetIt] instance used throughout the application
/// for dependency registration and access.
///
/// This acts as the central service locator and is used to
/// resolve services, blocs, repositories, and more.
final getIt = GetIt.instance;

/// Configures dependency injection for the entire app.
///
/// - Initializes all classes annotated with `@injectable`
///   using the auto-generated `injection.config.dart`.
/// - Manually registers the [AppRouter] as a singleton
///   for global navigation access.
///
/// This method should be called at the start of the app,
/// typically in `main()` before calling `runApp()`.
@injectableInit
void configureInjection() {
  // Auto-generated Injectable setup
  getIt.init();

  // Manual singleton registration for navigation
  getIt.registerSingleton<AppRouter>(AppRouter());
}
